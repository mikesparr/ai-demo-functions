steps:
# Scan source for security vulnerabilities
- id: 'scan'
  name: gcr.io/cloud-builders/gcloud
  entrypoint: "bash"
  args:
  - '-c'
  - |
    export SONAR_SCANNER_VERSION=4.4.0.2170
    export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
    curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
    unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
    export PATH=$SONAR_SCANNER_HOME/bin:$PATH
    export SONAR_SCANNER_OPTS="-server"
    sonar-scanner \
      -Dsonar.organization=$_SONAR_ORG \
      -Dsonar.projectKey=$_SONAR_KEY \
      -Dsonar.sources=./$_FUNCTION_NAME \
      -Dsonar.host.url=https://sonarcloud.io
# Create env vars file to pass to gcloud command
- id: 'env'
  name: 'bash'
  args:
  - '-c'
  - |
    cat > .env.deploy << EOF
    REDISHOST: $_REDISHOST
    REDISPORT: $_REDISPORT
    PROJECT_ID: $_PROJECT_ID
    DBNAME: $_DBNAME
    DBHOST: $_DBHOST
    DBUSER: $_DBUSER
    DBPORT: $_DBPORT
    BUCKET: $_BUCKET
    EOF
    echo "Created env file"
    cat .env.deploy
# Deploy the function
- id: 'deploy'
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - functions
  - deploy
  - $_FUNCTION_NAME
  - --runtime=python38
  - --source=./$_FUNCTION_NAME
  - --env-vars-file=.env.deploy
  - --vpc-connector=$_VPC_CONN
  - --region=$_GCP_REGION
  - --egress-settings=private-ranges-only
  - --entry-point=process
  - --memory=$_MEMORY
  - --trigger-topic=$_TRIGGER_TOPIC
